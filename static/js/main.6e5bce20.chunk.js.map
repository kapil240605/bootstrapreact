{"version":3,"sources":["components/NavBar.js","components/TextArea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","React","createElement","Fragment","className","concat","mode","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","href","role","to","About","cont","placeholder","onClick","togglemode","htmlFor","TextArea","text","settext","useState","heading","value","onChange","event","target","rows","handleup","newtext","toUpperCase","showalert","handlelo","toLowerCase","handleclear","split","length","Alert","alert","msg","prototype","PropTypes","string","about","App","setmode","setalert","message","setTimeout","document","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6e5bce20.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'   \r\n{/*import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";*/}\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <div className=\"navbar-brand\" >{props.title}</div>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Services\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" to=\"#\">{props.About}</a></li>\r\n            <li><a className=\"dropdown-item\" to=\"#\">{props.cont}</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" to=\"#\">Home</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'? 'dark':'light'} `}>\r\n  <input className=\"form-check-input\"  onClick={props.togglemode} type=\"checkbox\" role=\"switch\"  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavBar.prototype = {\r\n    title : PropTypes.string,\r\n    about : PropTypes.string\r\n}\r\n\r\n","\r\nimport React, {useState} from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const handlechange = (event)=>{\r\n       settext(event.target.value); \r\n    }\r\n\r\n    const handleup = ()=>{\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        props.showalert('Converted to UpperCase', 'success')\r\n    }\r\n\r\n    const handlelo = ()=>{\r\n      let newtext = text.toLowerCase();\r\n      settext(newtext);\r\n      props.showalert('Converted to LowerCase', 'success')\r\n  }\r\n\r\n  const handleclear = ()=>{\r\n    let newtext = \"\";\r\n    settext(newtext);\r\n    props.showalert('Text cleared', 'success')\r\n  }\r\n\r\n    const  [text, settext] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className='container my-3'>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handlechange} placeholder='Enter text here' id=\"mybox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className='btnfirst mx-2' onClick={handleup}>Convert to UpperCase</button>\r\n<button className='btnfirst mx-2' onClick={handlelo}>Convert to LowerCase</button>\r\n<button className='btnfirst mx-2' onClick={handleclear}>Clear text</button>\r\n</div>\r\n\r\n<div className='container my-3'>\r\n  <h2>Your text summary</h2>\r\n  <p>{text.split(\" \").length - 1} words & {text.length} characters</p>\r\n  <p>text can be read in {0.008 * text.split(\" \").length} minutes</p>\r\n  <h3>Preview</h3>\r\n  <p>{text}</p>\r\n</div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          {props.alert.type}: {props.alert.msg}\r\n                  </div>\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\n//import About from './components/About';\nimport NavBar from './components/NavBar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\n\n{/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\n*/}\n\nfunction App() {\n\n  const [mode, setmode] = useState('light')\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  let togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"rgb(8 55 102)\";\n      document.body.style.color = \"white\";\n      showalert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showalert(\"light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <NavBar About=\"about us\" title=\"Reactboot\" cont=\"Contact us\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert} />\n      {/*<Router>\n      <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextArea heading=\"Enter the Text to Analyze Bellow \" showalert={showalert} />\n          </Route>\n        </Switch>\n  </Router>*/}\n      <TextArea heading=\"Enter the Text to Analyze Bellow \" showalert={showalert} />\n      {/*<About />*/}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}